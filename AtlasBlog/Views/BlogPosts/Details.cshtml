@using Microsoft.AspNetCore.Identity
@inject UserManager<BlogUser> _userManager
@model AtlasBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>BlogPost</h4>
    <div>
        @if (User.IsInRole("Administrator"))
        {
            <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
        } |
        <a asp-action="Index">Back to List</a>
    </div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Slug)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Slug)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BlogPostState)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.BlogPostState)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Updated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Updated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.BlogName)
        </dd>
    </dl>
</div>

@if (User.Identity!.IsAuthenticated)
{
    //Present a simple form for collecting the comment
    <form asp-controller="Comments" asp-action="Create">
        <input type="hidden" asp-for="Slug">
        <input type="hidden" name="BlogPostId" value=@Model!.Id>

        <textarea class="form-control" name="CommentBody" rows=10 placeholder="Add Comment"></textarea>
        <button class="btn btn-dark">SUBMIT</button>
    </form>
}
else
{
    <a class="nav-link fw-bold" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details","BlogPosts", new {slug = Model.Slug})">Login to add a comment</a>
}

<hr />

<div class="container" id="CommentSection">
    <h4>Comments</h4>
    @foreach (var comment in Model!.Comments.OrderByDescending(c => c.CreatedDate))
    {
        <div class="card text-white bg-dark mb-3 w-100">
            <div class="card-header">
                <span class="float-start">@comment.Author!.FullName - @comment.Author</span>
                <span class="float-end">
                    Created: @comment.CreatedDate.ToString("MMM dd, yyyy")
                </span>
            </div>
            <div class="card-body">
                <p class="card-text">@comment.CommentBody</p>
            </div>
            @* THIS IS FOR THE COMMENT AUTHOR *@
            @if (comment.ModeratedDate is null && comment.AuthorId == _userManager.GetUserId(User))
            {
                <div class="footer">
                    <div class="row row-cols-1 row-cols-md-2 g-2">
                        <div class="col">
                            <button class="btn btn-dark btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal">EDIT</button>
                        </div>
                        <div class="col">
                            @* SweetAlert Window *@
                            <a asp-action="Delete" asp-controller="Comments" asp-route-id="@comment.Id" class="btn btn-dark w-100">Delete</a>
                        </div>
                    </div>
                </div>
            }

            @* THIS IS FOR THE COMMENT MODERATOR *@
            @if (User.IsInRole("Moderator"))
            {
                <div class="footer">
                    <div class="row row-cols-1 row-cols-md-2 g-2">
                        <div class="col">
                            <button class="btn btn-dark btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#moderateCommentModal">EDIT</button>
                        </div>
                        @*<div class="col">
                             SweetAlert Window 
                            <a asp-action="Delete" asp-controller="Comments" asp-route-id="@comment.Id" class="btn btn-dark w-100">Delete</a>
                        </div>*@
                    </div>
                </div>
            }
        </div>
    }
</div>



@* ------ MODAL SECTION ------ *@

@* EDIT COMMENT MODAL *@
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form asp-action="Edit" asp-controller="Comments">
            <input hidden name="Id" id="modalCommentId" />
            <div class="form-group">
            <textarea name="CommentBody" id="modalCommentBody"></textarea>
            </div>
            <div class="form-group">
            <button class="btn btn-sm btn-warning btn-outline-dark w-100 fw-bold">EDIT</button>
            </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Understood</button>
      </div>
    </div>
  </div>
</div>

@* MODERATE COMMENT MODAL *@
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form asp-action="Edit" asp-controller="Comments">
            <input hidden name="Id" id="modalCommentId" />
            <div class="form-group">
            <textarea name="CommentBody" id="modalCommentBody"></textarea>
            </div>
            <div class="form-group">
            <button class="btn btn-sm btn-warning btn-outline-dark w-100 fw-bold">EDIT</button>
            </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Understood</button>
      </div>
    </div>
  </div>
</div>


@section Scripts {
    <script>
        //Event handler for modal edit button
        document.querySelectorAll("button.btnModal").forEach(btn => {
            btn.addEventListener("click", function(){
                //1. Get the commentID into the modal
                document.getElementById("modalCommentId") = this.getAttribute("data-commentId")

                //2. Get the commentBody in to the modal
                /*document.getElementById("modalCommentBody") = this.closest("div.targetParent")
                                                                  .find("div.targetChild")*/

                let parent = this.closest("div.targetParent");
                let child = parent.querySelector("div.targetChild h5");
                document.getElementById("modalCommentBody").innerText
            });
        });


    </script>
}