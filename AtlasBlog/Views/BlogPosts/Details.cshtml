@using AtlasBlog.Enums
@using Microsoft.AspNetCore.Identity
@inject UserManager<BlogUser> _userManager
@model AtlasBlog.Models.BlogPost

@{
    ViewData["Title"] = "Details";
}


<!-- Page content-->
<div class="container mt-5">
    <div class="row">
        <div class="col-lg-8">
            <!-- Post content-->
            <article>
                <!-- Post header-->
                <header class="mb-4">
                    <!-- Post title-->
                    <h1 class="fw-bolder mb-1">@Html.DisplayFor(model => model.Title)</h1>
                    <!-- Post meta content-->
                    <div class="text-muted fst-italic mb-2">Posted on @Model!.Created.ToString("MMMM dd, yyyy") by Andrew Tudor</div>
                    <!-- Post categories-->
                    <a class="tagSm text-decoration-none link-light" href="#!">Web Design</a> 
                    <a class="tagSm text-decoration-none link-light" href="#!">Freebies</a>
                </header>
                <!-- Preview image figure-->
                <figure class="mb-4"><img class="img-fluid rounded" src="https://dummyimage.com/900x400/ced4da/6c757d.jpg" alt="..." /></figure>
                <!-- Post content-->
                <section class="mb-5">
                    @if (User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
                    } |
                    <a asp-action="Index">Back to List</a>
                    @Html.Raw(Model!.Body)
                </section>
            </article>
            <!-- Comments section-->
            <section class="mb-5">
                <div class="card bg-light">
                    <div class="card-body">
                        <!-- Comment form-->
                        @if (User.Identity!.IsAuthenticated)
                        {
                            //Present a simple form for collecting the comment
                            <form asp-controller="Comments" asp-action="Create" class="mb-4">
                                <input type="hidden" asp-for="Slug">
                                <input type="hidden" name="BlogPostId" value=@Model!.Id>

                                <textarea class="form-control" name="CommentBody" rows="3" placeholder="Join the discussion and leave a comment!"></textarea>
                                <button class="btn btn-dark btn-outline-light my-2">SUBMIT</button>
                            </form>
                        }
                        else
                        {
                            <a class="nav-link fw-bold" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details","BlogPosts", new {slug = Model.Slug})">Login to add a comment</a>
                            <hr />
                        }

                        <!-- Comment with nested comments
                        <div class="d-flex mb-4">
                            <!-- Parent comment
                            <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                            <div class="ms-3">
                                <div class="fw-bold">Commenter Name</div>
                                If you're going to lead a space frontier, it has to be government; it'll never be private enterprise. Because the space frontier is dangerous, and it's expensive, and it has unquantified risks.
                                Child comment 1
                                <div class="d-flex mt-4">
                                    <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                                    <div class="ms-3">
                                        <div class="fw-bold">Commenter Name</div>
                                        And under those conditions, you cannot establish a capital-market evaluation of that enterprise. You can't get investors.
                                    </div>
                                </div>
                                 Child comment 2
                                <div class="d-flex mt-4">
                                    <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                                    <div class="ms-3">
                                        <div class="fw-bold">Commenter Name</div>
                                        When you put money directly to a problem, it makes a good headline.
                                    </div>
                                </div>
                            </div>
                        </div>-->

                        <div id="CommentSection">
                            @foreach (var comment in Model!.Comments.OrderByDescending(c => c.UpdatedDate))
                            {
                                <hr />
                                <div class="d-flex my-3">
                                    <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..." /></div>
                                    <div class="ms-3 w-100">
                                        <div>
                                            <span class="fw-bold">@comment.Author!.FullName</span>


                                            @if (comment.ModeratedDate is null)
                                            {
                                                <span class="float-end text-muted fst-italic">
                                                    Created: @comment.CreatedDate.ToString("MMM dd, yyyy")
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="float-end text-danger fst-italic">
                                                    Moderated on: @comment.ModeratedDate?.ToString("MMM dd, yyyy")
                                                </span>
                                            }
                                        </div>

                                        <div class="targetChild">

                                            @if (comment.ModeratedDate is null)
                                            {
                                                <div>
                                                    <span>@comment.CommentBody</span>
                                                    @if (comment.ModeratedDate is null && comment.AuthorId == _userManager.GetUserId(User))
                                                    {
                                                    <span class="float-end">
                                                        <button class="btnModal btn" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal"><i class="fa-solid text-primary fa-pen-to-square"></i></button>
                                                        <button class="btnSwal btn" data-commentId=@comment.Id><i class="fa-solid text-danger fa-trash-can"></i></button>
                                                    </span>                                                       
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <h6 class="text-danger fst-italic">Moderation Reason: @comment.ModerationReason</h6>
                                                <h5 class="card-title">@comment.ModeratedBody <span class="fst-italic text-muted ms-2">(modified...)</span></h5>
                                            }

                                        </div>
                                    </div>
                                </div>
                            }


                        </div>
                    </div>
            </section>
        </div>





        <!-- Side widgets-->
        <div class="col-lg-4">
            <!-- Search widget-->
            <div class="card mb-4">
                <div class="card-header bg-dark text-light">Search</div>
                <div class="card-body">
                    <div class="input-group">
                        <input class="form-control" disabled type="text" placeholder="Enter search term..." aria-label="Enter search term..." aria-describedby="button-search" />
                        <button class="btn btn-primary" id="button-search" type="button">Go!</button>
                    </div>
                </div>
            </div>
            <!-- Categories widget-->
            <div class="card mb-4">
                <div class="card-header bg-dark text-light">Categories</div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <ul class="list-unstyled mb-0">
                                <li><a class="tagLg text-decoration-none link-light" href="#!">Web Design</a></li>
                                <li><a class="tagLg text-decoration-none link-light" href="#!">HTML</a></li>
                                <li><a class="tagLg text-decoration-none link-light" href="#!">Freebies</a></li>
                            </ul>
                        </div>
                        <div class="col-sm-6">
                            <ul class="list-unstyled mb-0">
                                <li><a class="tagLg text-decoration-none link-light" href="#!">JavaScript</a></li>
                                <li><a class="tagLg text-decoration-none link-light" href="#!">CSS</a></li>
                                <li><a class="tagLg  text-decoration-none link-light" href="#!">Tutorials</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Side widget-->
            <div class="card mb-4">
                <div class="card-header bg-dark text-light">Side Widget</div>
                <div class="card-body">You can put anything you want inside of these side widgets. They are easy to use, and feature the Bootstrap 5 card component!</div>
            </div>
        </div>
    </div>
</div>



@*
    <h4>Comments</h4>
    @if (User.Identity!.IsAuthenticated)
    {
    //Present a simple form for collecting the comment
    <form asp-controller="Comments" asp-action="Create">
    <input type="hidden" asp-for="Slug">
    <input type="hidden" name="BlogPostId" value=@Model!.Id>

    <textarea class="form-control" name="CommentBody" rows=10 placeholder="Add Comment"></textarea>
    <button class="btn btn-dark btn-outline-light my-2">SUBMIT</button>
    </form>
    }
    else
    {
    <a class="nav-link fw-bold" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details","BlogPosts", new {slug = Model.Slug})">Login to add a comment</a>
    }*@
@*
    <hr />

    <div class="row" id="CommentSection">
    @foreach (var comment in Model!.Comments.OrderByDescending(c => c.UpdatedDate))
    {
    <div class="col-12">
    <div class="targetParent card text-white bg-dark p-1 mb-3 w-100">

    <div class="card-header border-light">
    <span class="float-start">
    @comment.Author!.FullName - @comment.Author
    </span>
    @if (comment.ModeratedDate is null)
    {
    <span class="float-end">
    Created: @comment.CreatedDate.ToString("MMM dd, yyyy")
    </span>
    }
    else
    {
    <span class="float-end text-danger fst-italic">
    Moderated on: @comment.ModeratedDate?.ToString("MMM dd, yyyy")
    </span>
    }
    </div>

    <div class="targetChild card-body">
    @if (comment.ModeratedDate is null)
    {
    <p class="card-text">@comment.CommentBody</p>
    }
    else
    {
    <h6 class="text-danger fst-italic">Moderation Reason: @comment.ModerationReason</h6>
    <h5 class="card-title">@comment.ModeratedBody <span class="fst-italic text-muted ms-2">(modified...)</span></h5>
    }
    </div>*@

@* THIS IS FOR THE COMMENT AUTHOR
    @if (comment.ModeratedDate is null && comment.AuthorId == _userManager.GetUserId(User))
    {
    <div class="footer ps-3">
    <div class="row row-cols-1 row-cols-md-2 g-2">
    <div class="col">
    <button class="btnModal btn btn-dark btn-outline-light btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#editCommentModal">EDIT</button>
    </div>
    <div class="col">
    @* SweetAlert Window
    <button class="btnSwal btn btn-dark btn-outline-danger btn-sm w-100" data-commentId=@comment.Id>DELETE</button>
    </div>
    </div>
    </div>
    }*@

@* THIS IS FOR THE COMMENT MODERATOR
    @if (User.IsInRole("Moderator"))
    {
    <div class="footer">
    <div class="row row-cols-1 g-2">
    <div class="col">
    <button class="btnModModal btn btn-dark btn-outline-danger btn-sm w-100" data-commentId=@comment.Id data-bs-toggle="modal" data-bs-target="#moderateCommentModal">MODERATE</button>
    </div>
    </div>
    </div>
    }
    </div>
    </div>
    }
    </div>

*@

@* ------ MODAL SECTION ------ *@

@* EDIT COMMENT MODAL *@
<div class="modal fade" id="editCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel1">Edit Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Edit" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalCommentId" />
                    <input type="hidden" asp-for="Slug" />

                    <div class="form-group">
                        <label class="control-label">Comment</label>
                        <textarea class="form-control" rows=10 name="CommentBody" id="modalCommentBody"></textarea>
                    </div>

                    <div class="form-group float-end">
                        <button type="button" class="btn btn-sm btn-dark btn-outline-light fw-bold">SAVE</button>
                        <button type="button" class="btn btn-sm btn-dark btn-outline-light fw-bold" data-bs-dismiss="modal">CANCEL</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@* MODERATE COMMENT MODAL *@
<div class="modal fade" id="moderateCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel2">Moderating Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                @*1. Display a read-only version of the original body
                    2. A text area for collecting the Moderated Body
                    3. Select List of Mod Reasons
                *@
                <form asp-action="Moderate" asp-controller="Comments">
                    <input type="hidden" name="Id" id="modalModerateCommentId" />

                    <div class="form-group">
                        <label class="control-label">Original Body</label>
                        <textarea id="modalModerateCommentBody" rows=5 class="form-control" readonly></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderated Body</label>
                        <textarea name="ModeratedBody" rows=5 class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Moderation Reason</label>
                        <select class="form-control" name="ModerationReason" asp-items="@Html.GetEnumSelectList<ModerationReason>()"></select>
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-warning btn-outline-dark w-100 fw-bold">SAVE</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<form name="frmDeleteComment" asp-action="Delete" asp-controller="Comments">
    <input type="hidden" name="Id" id="deleteCommentId" />
</form>

@section Scripts {


<!-- Edit Modal -->
<script>
    //Event handler for modal edit button
    document.querySelectorAll("button.btnModal").forEach(btn => {
             btn.addEventListener("click", function(){

                //Thing 1: Get the Id of the comment into the Modal
                document.getElementById('modalCommentId').value = this.getAttribute('data-commentId');

                //Thing 2: Get the CommentBody into the modal
                let parent = this.closest("div.targetParent");
                let child = parent.querySelector("div.targetChild p");
                document.getElementById('modalCommentBody').innerText = child.innerText;

        });
    });
</script>

<!-- Mod Modal -->
<script>
    document.querySelectorAll("button.btnModModal").forEach(btn => {
       btn.addEventListener("click", function(){

           //Thing 1: Get the Id of the comment into the Modal
           document.getElementById('modalModerateCommentId').value = this.getAttribute('data-commentId');
           //Thing 2: Get the original CommentBody into the read only textarea of the modal
           let parent = this.closest("div.targetParent");
           let child = parent.querySelector("div.targetChild p");
           document.getElementById('modalModerateCommentBody').innerText = child.innerText;
       });
    });
</script>

<!-- Delete SweetAlert -->
<script>
    document.querySelectorAll("button.btnSwal").forEach(btn => {
        btn.addEventListener("click", function(){
            document.getElementById("deleteCommentId").value = this.getAttribute('data-CommentId');
            DeleteComment();
        });
    });
    function DeleteComment(){

            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
            }).then((result) => {
                if (result.isConfirmed) {
                Swal.fire({
                    title: 'Deleted!',
                    text: 'Your comment has been deleted.',
                    icon: 'success',
                    showConfirmButton: false
                })
                setTimeout(function(){
                    document.frmDeleteComment.submit();
                }, 900);

                }
            })
    }
</script>

}