@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@*@model IEnumerable<AtlasBlog.Models.BlogPost>*@

@model IPagedList<BlogPost>
@{
    ViewData["Title"] = "Index";
}

<h1>All Blog Posts</h1>
@if (User.IsInRole("Administrator"))
{
<p>
    <a asp-action="Create">Create New</a>
</p>    
}

<div class="row row-cols-1 row-cols-md-3 g-2">
    @foreach (var blogPost in Model)
    {
        <div class="col">
            <div class="card h-100">
                <img src="https://dummyimage.com/700x350/dee2e6/6c757d.jpg" class="card-img-top" alt="...">
                <div class="card-body">
                    <h5 class="card-title">@blogPost.Title</h5>
                    <p class="card-text h6">@blogPost.Abstract</p>
                    <h6 class="card-title text-muted fst-italic">Created: @blogPost.Created.ToString("MMM dd, yyyy")</h6>
                </div>
                <div class="card-footer">             
                    <a asp-action="Details" asp-route-Slug="@blogPost.Slug" class="btn btn-sm btn-dark btn-outline-light w-100">Read Blog Post</a>
                </div>
            </div>
        </div>
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>

<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, pageNum => Url.Action("SearchIndex", new { pageNum, searchTerm = ViewBag.SearchTerm }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </div>
</div>